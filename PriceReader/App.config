<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>
	<appSettings>
		<!-- URL endpoints -->
		<add key="SendInternalMessage" value="false" />
		<add key="RunInternalListener" value="false" />
		<add key="InternalUdpPort" value="9879" />
		<add key="PricesEndpoint" value="prices" />
		<add key="Host" value="127.0.0.1" />
		<add key="ExternalUdpPort" value="9877" />
		<!-- Data file -->
		<add key="DataFileName" value="Data.txt" />
		<!-- How often to read it -->
		<add key="DataFileRate" value="100" />
		<!-- Pause between each read (for manually testing the UI painting threads) -->
		<add key="DataPause" value="0" />	
	</appSettings>
	<log4net>
		<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="PriceReader.log" />
			<appendToFile value="true" />
			<rollingStyle value="Composite" />
			<datePattern value="yyyyMMdd" />
			<maximumFileSize value="10MB" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %line %message%newline" />
			</layout>
		</appender>
		<root>
			<level value="INFO" />
			<appender-ref ref="RollingLogFileAppender" />
		</root>
	</log4net>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
    </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>